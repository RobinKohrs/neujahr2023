mutate(
year = lubridate::year(time),
season = glue("{year}/{year+1}")
) %>%
mutate(
fakeDate = as.Date("2000-{month}-{day}")
)
s %>%
mutate(
day = lubridate::day(time),
month = lubridate::month(time),
winter = case_when((month == 12 | month == 1) ~ T,
T ~ F)
) %>%
filter(winter == T) %>%
mutate(periodNo = ifelse((month == 12 &
day == 1), row_number(), NA)) %>% tidyr::fill(periodNo) %>%
mutate(
year = lubridate::year(time),
season = glue("{year}/{year+1}")
) %>% glimpse
library(lubridate)
d = as.Date("2012-12-31")
d
yday(d)
day(d)
s %>%
mutate(
day = lubridate::day(time),
month = lubridate::month(time),
winter = case_when((month == 12 | month == 1) ~ T,
T ~ F)
) %>%
filter(winter == T) %>%
mutate(periodNo = ifelse((month == 12 &
day == 1), row_number(), NA)) %>% tidyr::fill(periodNo) %>%
mutate(
year = lubridate::year(time),
season = glue("{year}/{year+1}")
) %>%
mutate(
fakeDate = as.Date("2000-{month}-{day}")
)
s %>%
mutate(
day = lubridate::day(time),
month = lubridate::month(time),
winter = case_when((month == 12 | month == 1) ~ T,
T ~ F)
) %>%
filter(winter == T) %>%
mutate(periodNo = ifelse((month == 12 &
day == 1), row_number(), NA)) %>% tidyr::fill(periodNo) %>%
mutate(
year = lubridate::year(time),
season = glue("{year}/{year+1}")
) %>%
mutate(
fakeDate = as.Date(glue("2000-{month}-{day}"))
)
s %>%
mutate(
day = lubridate::day(time),
month = lubridate::month(time),
winter = case_when((month == 12 | month == 1) ~ T,
T ~ F)
) %>%
filter(winter == T) %>%
mutate(periodNo = ifelse((month == 12 &
day == 1), row_number(), NA)) %>% tidyr::fill(periodNo) %>%
mutate(
year = lubridate::year(time),
season = glue("{year}/{year+1}")
) %>%
mutate(
fakeDate = as.Date(glue("2000-{month}-{day}"))
) %>% select(
data, geo.x, geo.y, time, id, period, fakeDate
)
s %>%
mutate(
day = lubridate::day(time),
month = lubridate::month(time),
winter = case_when((month == 12 | month == 1) ~ T,
T ~ F)
) %>%
filter(winter == T) %>%
mutate(periodNo = ifelse((month == 12 &
day == 1), row_number(), NA)) %>% tidyr::fill(periodNo) %>%
mutate(
year = lubridate::year(time),
season = glue("{year}/{year+1}")
) %>%
mutate(
fakeDate = as.Date(glue("2000-{month}-{day}"))
) %>% select(
data, geo.x, geo.y, time, id, periodNo, fakeDate
)
s %>%
mutate(
day = lubridate::day(time),
month = lubridate::month(time),
winter = case_when((month == 12 | month == 1) ~ T,
T ~ F)
) %>%
filter(winter == T) %>%
mutate(periodNo = ifelse((month == 12 &
day == 1), row_number(), NA)) %>% tidyr::fill(periodNo) %>%
mutate(
year = lubridate::year(time),
season = glue("{year}/{year+1}")
) %>%
mutate(
fakeDate = as.Date(glue("2000-{month}-{day}"))
) %>% select(
data, geo.x, geo.y, time, id, periodNo, fakeDate
) %>%
group_by(
periodNo
) %>%
mutate(
t = cur_group_id()
)
s %>%
mutate(
day = lubridate::day(time),
month = lubridate::month(time),
winter = case_when((month == 12 | month == 1) ~ T,
T ~ F)
) %>%
filter(winter == T) %>%
mutate(periodNo = ifelse((month == 12 &
day == 1), row_number(), NA)) %>% tidyr::fill(periodNo) %>%
mutate(
year = lubridate::year(time),
season = glue("{year}/{year+1}")
) %>%
mutate(
fakeDate = as.Date(glue("2000-{month}-{day}"))
) %>% select(
data, geo.x, geo.y, time, id, periodNo, fakeDate
) %>%
group_by(
periodNo
) %>%
mutate(
t = cur_group_id()
) -> data
View(data)
# select the 1st dec to 31 jan for each station  ---------------------------
dataEachStation = imap(stationsData, function(s, i){
cat(i, "/", length(stationsData), "\r")
s %>%
mutate(
day = lubridate::day(time),
month = lubridate::month(time),
winter = case_when((month == 12 | month == 1) ~ T,
T ~ F)
) %>%
filter(winter == T) %>%
mutate(periodNo = ifelse((month == 12 &
day == 1), row_number(), NA)) %>% tidyr::fill(periodNo) %>%
mutate(
year = lubridate::year(time),
season = glue("{year}/{year+1}")
) %>%
mutate(
fakeDate = as.Date(glue("2000-{month}-{day}"))
) %>% select(
data, geo.x, geo.y, time, id, periodNo, fakeDate
) %>%
group_by(
periodNo
) %>%
mutate(
t = cur_group_id()
) -> data
})
dataEachStation
geo = map(dataEachStation, function(s){
})
library(sf)
geo = map(dataEachStation, function(s){
g = st_as_sf(s, coords=c("geo.x", "geo.y"), crs=4326)
})
geo
geo %>% bind_rows()
a = geo %>% bind_rows()
a %>% group_by(id) %>% slice_head(n=1)
o = a %>% group_by(id) %>% slice_head(n=1)
library(mapview)
mapview(o, col.regions="id")
mapview(o, zcol="id")
dataEachStation[[1]]
library(here)
library(stars)
library(sf)
library(glue)
library(tidyverse)
library(rajudas)
df = dataEachStation[[1]]
df
# select the 1st dec to 31 jan for each station  ---------------------------
dataEachStation = imap(stationsData, function(s, i){
cat(i, "/", length(stationsData), "\r")
s %>%
mutate(
day = lubridate::day(time),
month = lubridate::month(time),
winter = case_when((month == 12 | month == 1) ~ T,
T ~ F)
) %>%
filter(winter == T) %>%
mutate(periodNo = ifelse((month == 12 &
day == 1), row_number(), NA)) %>% tidyr::fill(periodNo) %>%
mutate(
year = lubridate::year(time),
season = glue("{year}/{year+1}")
) %>%
mutate(
fakeDate = as.Date(glue("2000-{month}-{day}"))
) %>% select(
data, geo.x, geo.y, time, id, periodNo, fakeDate, season
) %>%
group_by(
periodNo
) %>%
mutate(
t = cur_group_id()
) -> data
})
df = dataEachStation[[1]]
df
seasonVar = "season"
df %>%
pivot_wider(
names_from = {{seasonVar}}
)
df %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
)
df %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) %>% glimpse
df
dateVar = "time"
df %>%
select(-timeVar)
df %>%
select(-dateVar)
df %>%
select(-dateVar) %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) %>% glimpse
df %>%
select(-dateVar)
periodNoVar = "periodNo"
df %>%
select(-dateVar, periodNoVar) %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) %>% glimpse
df %>%
select(-dateVar, periodNoVar)
df %>%
select(-dateVar, periodNoVar, fakeDateVar) %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) %>% glimpse
fakeDateVar = "fakeDate"
df %>%
select(-dateVar, periodNoVar, fakeDateVar) %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) %>% glimpse
df %>%
select(-dateVar, periodNoVar, fakeDateVar)
df %>%
select(-dateVar, periodNoVar, fakeDateVar, "geo.x", "geo.y") %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) %>% glimpse
df %>%
select(seasonVar, data) %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) %>% glimpse
df
df %>%
ungroup() %>%
select(seasonVar, data) %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) %>% glimpse
df %>%
ungroup() %>%
select(seasonVar, data)
df %>%
ungroup() %>%
select(seasonVar, data, fakeDate) %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) %>% glimpse
df %>%
ungroup() %>%
select(seasonVar, data, fakeDate, id) %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) -> dfWide
dfWide
df %>%
ungroup() %>%
select(seasonVar, data, fakeDate, id) %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) %>% glimpse
df %>%
ungroup() %>%
select(seasonVar, data, fakeDate, id) %>%
pivot_wider(
names_from = {{seasonVar}},
values_from = data
) -> dfWide
dfWide
sum(is.na(x)) != length(x)
dfWide %>%
select(
where(
function(x){
sum(is.na(x)) != length(x)
}
)
)
dfWide %>%
select(
where(
function(x){
sum(is.na(x)) != length(x)
}
)
) %>% View
dfWide %>%
select(
where(
function(x){
sum(is.na(x)) != length(x)
}
)
) -> dfFinal
source(here("analysis/utils.R"))
s = formatOneStationDW(dataEachStation[[1]])
s
s = formatOneStationDW(dataEachStation[[2]])
s
s %>% glimpse
head(s)
meta = httr::GET("https://dataset.api.hub.zamg.ac.at/v1/station/historical/klima-v1-1d/metadata") %>% httr::content()
stationsInfo = map(meta$stations, function(x){
# replace null with na
isnull = which(map(x, is.null) %>% unlist) %>% unname()
x[isnull] = NA
# make df
df = as.data.frame(x)
return(df)
}) %>% bind_rows()
stationsInfo
stationsInfo %>% glimpse()
stationsInfo %>%
select(lat, lon, name, state, altitude)
dfFinal
stationsInfo %>%
select(lat, lon, name, state, altitude) %>% right_join(dfFinal, by="id")
stationsInfo
stationsInfo %>%
select(id, lat, lon, name, state, altitude) %>% right_join(dfFinal, by="id")
stationsInfo %>%
select(id, lat, lon, name, state, altitude) %>% right_join(dfFinal, by="id") %>% glimpse
source(here("analysis/utils.R"))
s = formatOneStationDW(dataEachStation[[2]])
s
glimpses
glimpse(s)
s = dataEachStation
s
id s$id[[1]]
id = s$id[[1]]
id
s = dataEachStation[[1]]
s$id[[1]]
id = s$id[[1]]
data = formatOneStationDW(s)
id = s$id[[1]]
name = data$name[[1]]
id
name
name = data$name[[1]] %>% str_trim()
name
name = data$name[[1]] %>% janitor::clean_names()
name = data$name[[1]] %>% janitor::make_clean_names()
name
outfile = makePath(here(glue("output/data/statstionsDezJanDW/{id}_{name}.csv")))
outfile
walk(dataEachStation, function(s){
data = formatOneStationDW(s)
id = s$id[[1]]
name = data$name[[1]] %>% janitor::make_clean_names()
outfile = makePath(here(glue("output/data/statstionsDezJanDW/{id}_{name}.csv")))
if(file.exists(outfile)) return
write_csv(data, outfile)
})
stationsInfo %>%
select(id, lat, lon, name, state, altitude) %>% right_join(dfFinal, by="id") -> dfWithInfo
dfWd
df
dfWide
df %>%
ungroup() %>%
select(seasonVar, data, fakeDate, id) -> seasonData
seasonData
# if there is no 2023 season dont compute mean
"2022/2023" %in% seasonData$season
# if there is no 2023 season dont compute mean
contains23 = "2022/2023" %in% seasonData$season
seasonData %>% pivot_wider(
names_from = {{seasonVar}},
values_from = data
) -> dfWide
# mean without 23
seasonData %>%
filter(
season != "2022/2023"
)
# mean without 23
seasonData %>%
filter(
season != "2022/2023"
) %>%
group_by(fakeDate) %>%
summarise(
meen = mean(data, na.rm=T)
)
# mean without 23
seasonData %>%
filter(
season != "2022/2023"
) %>%
group_by(fakeDate) %>%
summarise(
data = mean(data, na.rm=T)
) %>%
mutate(
season = "mean"
)
# mean without 23
seasonData %>%
filter(season != "2022/2023") %>%
group_by(fakeDate) %>%
summarise(data = mean(data, na.rm = T)) %>%
mutate(season = "mean",
id = seasonData$id)
# mean without 23
seasonData %>%
filter(season != "2022/2023") %>%
group_by(fakeDate) %>%
summarise(data = mean(data, na.rm = T)) %>%
mutate(season = "mean",
id = seasonData$id[[1]])
bind_rows(seasonData, mean) %>% pivot_wider(
names_from = {{seasonVar}},
values_from = data
) -> dfWide
bind_rows(seasonData, mean)
mean
# mean without 23
seasonData %>%
filter(season != "2022/2023") %>%
group_by(fakeDate) %>%
summarise(data = mean(data, na.rm = T)) %>%
mutate(season = "mean",
id = seasonData$id[[1]]) -> meen
bind_rows(seasonData, meen) %>% pivot_wider(
names_from = {{seasonVar}},
values_from = data
) -> dfWide
dfWide %>% glimpse
source(here("analysis/utils.R"))
s = formatOneStationDW(dataEachStation[[2]])
s
force = T
walk(dataEachStation, function(s){
data = formatOneStationDW(s)
id = s$id[[1]]
name = data$name[[1]] %>% janitor::make_clean_names()
outfile = makePath(here(glue("output/data/statstionsDezJanDW/{id}_{name}.csv")))
if(file.exists(outfile) & !force) return()
write_csv(data, outfile)
})
